{"version":3,"sources":["materila_ui/img/bayernlogo.png","Components/Navbar.js","util/Button.js","Components/Layout.js","ContextProvider/UserContext.js","Pages/Anime.js","Components/Input.js","Pages/Home.js","Search/Search.style.js","Search/SearchResult.js","materila_ui/button/Button.js","materila_ui/menu/Menu.js","materila_ui/container/mockData.js","materila_ui/container/MainGrid.js","materila_ui/dialog/Dialog.js","materila_ui/dialog/DialogTest.js","materila_ui/ContextProvider/ThemeProvider.js","materila_ui/navbar/Navbar.js","materila_ui/components/useInput.js","materila_ui/components/NoteDisplay.js","materila_ui/components/Note.js","materila_ui/components/About.js","materila_ui/spacer/TopSpacer.js","materila_ui/navbar/Bottom.js","materila_ui/card/Card.js","materila_ui/profile/Snackbar.js","materila_ui/profile/CreateUser.js","materila_ui/profile/Profile.js","materila_ui/Material.js","index.js"],"names":["module","exports","Nav","styled","nav","open","FcMenu","AiFillCloseCircle","Button","button","createGlobalStyle","div","createContext","section","form","main","input","p","status","ButtonWrap","Buttons","primary","css","StyledButton","children","onClick","disabled","React","useState","count","msg","variant","startIcon","IconButton","MenuUI","anchorEl","setAnchorEl","handleClose","id","keepMounted","Boolean","onClose","MenuItem","data","name","content","getData","a","Container","Grid","PaperStyled","Paper","Item","Loading","CircularProgress","CheckBox","v","checked","setChecked","Checkbox","fontSize","color","onChange","prev","icon","checkedIcon","MainGrid","setData","useEffect","timer","setTimeout","reqData","res","clearTimeout","container","spacing","item","xs","variation","Array","from","length","_","i","map","key","lg","md","index","elevation","size","Btn","DialogTitle","withStyles","theme","root","margin","padding","closeButton","position","right","top","palette","grey","props","classes","other","disableTypography","className","Typography","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","DialogContainer","setOpen","style","display","Dialog","aria-labelledby","dividers","autoFocus","useStyles","makeStyles","Close","Content","PaperContainer","MyDialog","endIcon","toUpperCase","Theme","useTheme","useContext","ThemeContextProvider","isDark","setIsDark","Provider","value","Moon","Brightness2Icon","Sun","Brightness7Icon","CheckboxStyled","DrawerUI","isMobile","useMediaQuery","Drawer","anchor","List","maxWidth","LinkStyled","to","fullWidth","ListItemStyled","Link","ListItem","Menu","background","backgroundColor","MenuIcon","ToolbarStyled","Toolbar","Navbar","console","log","AppBar","JSON","stringify","prevOn","useInput","initial","setValue","target","completed","NoteDisplay","note","dispatch","sm","type","payload","article","add","action","noteReducer","state","filter","remove","complete","Note","useReducer","notes","noteDispatch","TextField","label","uuidv4","direction","align","justify","Page","useParams","goBack","useHistory","page","datas","find","RegExp","split","join","test","About","match","useRouteMatch","setAnchor","fixed","e","currentTarget","path","BottomNavigation","CardStyled","Card","CardUI","CardActionArea","CardMedia","image","require","height","CardContent","CardActions","Message","username","handleButtonClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Fragment","CreateUser","handleSubmit","ref","useRef","current","focus","alignItems","inputRef","AvatarStyled","Avatar","StyledPaer","Agreement","h1","small","MediaObject","User","Profile","setUsername","checkedA","checkedB","handleChange","prevChecked","FormControlLabel","control","backgroundImage","borderRadius","Global","Home","prevIsDark","styledTheme","dark","light","Material","useMemo","createMuiTheme","exact","MaterialUI","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da7ea669.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bayernlogo.f9ba3050.png\";","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { FcMenu } from \"react-icons/fc\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Nav = styled.nav`\n  margin: 0;\n  padding: 10px;\n  ul {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    gap: 25px;\n    align-items: center;\n    list-style-type: none;\n    li {\n      font-size: 1.4rem;\n      a {\n        color: black;\n        text-decoration: none;\n        padding: 8px;\n      }\n    }\n  }\n  @media screen and (max-width: 560px) {\n    ul {\n      display: ${({ open }) => (open ? \"flex\" : \"none\")};\n      li {\n        padding: 8px 0;\n      }\n    }\n  }\n`;\n\nconst Icon = styled(FcMenu)`\n  width: 50px;\n  height: 50px;\n  padding: 5px;\n  cursor: pointer;\n  display: none;\n  border: 2px solid none;\n  :hover {\n    background-color: #f8f9fa;\n    border-radius: 50%;\n  }\n  @media screen and (max-width: 560px) {\n    display: block;\n  }\n`;\n\nconst Close = styled(AiFillCloseCircle)`\n  width: 80px;\n  height: 60px;\n  cursor: pointer;\n  display: none;\n  @media screen and (max-width: 560px) {\n    display: block;\n  }\n`;\n\nconst Sub = styled(Nav)`\n  @media screen and (max-width: 560px) {\n    ul {\n      display: flex;\n    }\n  }\n  padding: 0;\n  ul {\n    padding: 0;\n  }\n`;\n\nconst StyledButon = styled(Button)`\n  && {\n    color: seagreen;\n  }\n`;\n\nconst Navbar = () => {\n  const [open, setOpen] = useState(false);\n  const toggle = () => setOpen(prev => !prev);\n  return (\n    <>\n      <Nav open={open}>\n        {!open ? (\n          <Icon color=\"white\" onClick={toggle} />\n        ) : (\n          <Close onClick={toggle} />\n        )}\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <StyledButon>Home</StyledButon>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/anime\">\n              <StyledButon>Anime</StyledButon>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/account\">\n              <StyledButon>Account</StyledButon>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/user\">\n              <StyledButon>User</StyledButon>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/search\">\n              <StyledButon>Search</StyledButon>\n            </Link>\n          </li>\n        </ul>\n      </Nav>\n    </>\n  );\n};\n\nexport const SubNavbar = ({ items, path }) => {\n  return (\n    <Sub>\n      <ul>\n        {items.map((item, i) => (\n          <li key={i}>\n            <Link to={`${path}/${item.toLowerCase().replace(/home/g, \"/\")}`}>\n              {item}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Sub>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Btn = styled.button`\n  background-color: #5f3dc4;\n  color: white;\n  padding: 10px 15px;\n  border: 2px solid #5f3dc4;\n  border-radius: 5px;\n  font-size: 1.5rem;\n  margin: 0 10px;\n  cursor: pointer;\n  :hover {\n    background-color: transparent;\n    color: black;\n  }\n`;\n\nconst Button = ({ children, onClick }) => {\n  return <Btn onClick={onClick}>{children}</Btn>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Navbar from \"./Navbar\";\nimport Sidebar from \"./Sidebar\";\nimport { useLocation } from \"react-router-dom\";\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        font-size: 14px;\n        box-sizing: border-box;\n    }\n    body {\n        font-family: 'Montserrat', sans-serif;\n        background-color: #ced4da;\n        color: #212529;\n        padding: 0;\n        margin: 0;\n    }\n    @media screen and (min-width: 700px) {\n        html {\n            font-size: 16px;\n        }\n    }\n    @media screen and (min-width: 1024px) {\n        html {\n            font-size: 18px;\n        }\n    }\n\n`;\n\nconst Container = styled.div`\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-areas:\n    \"navbar\"\n    \"main\"\n    \"sidebar\"\n    \"footer\";\n  @media screen and (min-width: 800px) {\n    grid-template-areas:\n      \"navbar navbar navbar\"\n      \"sidebar main main\"\n      \"footer footer footer\";\n  }\n  @media screen and (min-width: 1024px) {\n    grid-template-areas:\n      \"navbar navbar navbar navbar\"\n      \"sidebar main main main\"\n      \"footer footer footer footer\";\n  }\n\n  nav {\n    grid-area: navbar;\n  }\n  section {\n    grid-area: sidebar;\n    background-color: #f1f3f5;\n    padding: 10px 20px;\n    margin: 10px;\n    border-radius: 10px;\n    min-width: 250px;\n  }\n  main {\n    grid-area: main;\n    background-color: #f1f3f5;\n    padding: 0 20px;\n    margin: 10px;\n    border-radius: 10px;\n  }\n  footer {\n    grid-area: footer;\n  }\n`;\n\nconst Layout = ({ children }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <Navbar items={[\"/\", \"anime\"]} />\n        <main>\n          <p>{location.pathname}</p>\n          {children}\n        </main>\n        <Sidebar />\n      </Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useReducer, useState, useContext, createContext } from \"react\";\n\nconst User = createContext();\n\nexport const useUser = () => useContext(User);\n\nconst getUserAccount = keyname => localStorage.getItem(keyname);\n\nconst authenticaUser = (state, action) => {\n  switch (action.type) {\n    case \"login\":\n      return {\n        loggedIn: true,\n        username: action.payload.username,\n        password: action.payload.password,\n      };\n    case \"logout\":\n      return {\n        loggedIn: false,\n        username: \"\",\n        password: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nconst UserContext = ({ children }) => {\n  /*\n  const [userInfo, dispatchUserInfo] = useReducer(\n    authenticaUser,\n    { loggedIn: false }\n  );\n  */\n  const [userInfo, setUserInfo] = useState(\n    JSON.parse(getUserAccount(\"useraccount\")) || { loggedIn: false }\n  );\n  return (\n    <User.Provider value={{ userInfo, setUserInfo }}>{children}</User.Provider>\n  );\n};\n\nexport default UserContext;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Switch,\n  useRouteMatch,\n  useParams,\n  Route,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport { SubNavbar } from \"../Components/Navbar\";\nimport fetchLocal from \"../util/useFetchLocal\";\nimport data from \"../data/anime.json\";\nimport { useUser } from \"../ContextProvider/UserContext\";\nimport styled from \"styled-components\";\nimport Button from \"../util/Button\";\n\nconst AnimePage = ({ animeLists }) => {\n  const { animeID } = useParams();\n  if (\n    !animeLists.some(\n      animeList =>\n        animeList?.name.toUpperCase() ===\n        animeID.replace(/[-]/, \" \").toUpperCase()\n    )\n  ) {\n    return null;\n  }\n  const [{ name, description, status }] = animeLists.filter(\n    animeList =>\n      animeList?.name.toUpperCase() ===\n      animeID.replace(/[-]/, \" \").toUpperCase()\n  );\n  return (\n    <>\n      <h1>{name}</h1>\n      <p>{description}</p>\n      <p>{status}</p>\n    </>\n  );\n};\n\nconst Title = styled.section`\n  display: flex;\n  h1 {\n    flex: 1 1 auto;\n  }\n  button {\n    align-self: center;\n  }\n`;\n\nconst Anime = () => {\n  const [animeLists, setAnimeList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { userInfo, setUserInfo } = useUser();\n  const match = useRouteMatch();\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    const localFetch = async () => {\n      const res = await fetchLocal(data);\n      setLoading(false);\n      setAnimeList(res);\n    };\n    localFetch();\n  }, []);\n  return (\n    <>\n      <Title>\n        <h1>Anime Page</h1>\n        {userInfo.loggedIn && (\n          <Button onClick={() => setUserInfo({ loggedIn: false })}>\n            Logout\n          </Button>\n        )}\n      </Title>\n      {userInfo.loggedIn && <h3>Hi, {userInfo.username}</h3>}\n      <Button onClick={() => history.goBack()}>Go back</Button>\n      <Button onClick={() => history.goForward()}>Go Forward</Button>\n      {!loading && (\n        <SubNavbar\n          path={match.path}\n          items={animeLists.map(anime => anime.name.replace(/\\s+/g, \"-\"))}\n        />\n      )}\n      <h3>{loading && \"Loading...\"}</h3>\n      {!loading && (\n        <Switch>\n          <Route path={`${match.path}/:animeID`}>\n            <AnimePage animeLists={animeLists} />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n};\n\nexport default Anime;\n","import useInput from \"../util/useInput\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useUser } from \"../ContextProvider/UserContext\";\nimport { useLocation, Redirect } from \"react-router-dom\";\n\nconst Form = styled.form`\n  margin: 20px auto;\n  padding: 15px;\n  border-radius: 8px;\n  border: 5px solid #ced4da;\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  h1 {\n    text-align: center;\n  }\n  button {\n    padding: 5px;\n    width: 60%;\n    margin: auto;\n    font-size: 2rem;\n    background-color: #212529;\n    color: white;\n    cursor: pointer;\n    :hover {\n      background-color: transparent;\n      color: black;\n    }\n  }\n  @media screen and (max-width: 800px) {\n    width: 95%;\n    button {\n      width: 90%;\n      margin: auto;\n    }\n  }\n`;\n\nconst InputField = styled.section`\n  padding: 10px;\n  display: flex;\n  gap: 20px;\n  input {\n    flex: 1 1 auto;\n    padding: 15px;\n    font-size: 1.2rem;\n  }\n  label {\n    align-self: center;\n  }\n`;\n\nconst storeUserAccount = (keyname, loggedIn, username, password) =>\n  localStorage.setItem(\n    keyname,\n    JSON.stringify({ loggedIn, username, password })\n  );\n\nconst getUserAccount = keyname => localStorage.getItem(keyname);\n\nconst Input = ({ initial = \"\" }) => {\n  const [username, reset] = useInput(initial);\n  const [password, resetPass] = useInput(initial);\n  const { userInfo, setUserInfo } = useUser();\n  const { state } = useLocation();\n  const { from } = state || { from: { pathname: \"/\" } };\n  console.log(`the from variable looks like: ${from}`);\n  const handleSubmit = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    if (localStorage.getItem(\"useraccount\")) {\n      const userData = getUserAccount(\"useraccount\");\n      setUserInfo(userData);\n      return;\n    }\n    setUserInfo({\n      loggedIn: true,\n      username: username.value,\n      password: password.value,\n    });\n    storeUserAccount(\"useraccount\", true, username.value, password.value);\n    reset();\n    resetPass();\n  };\n  const handleEnter = e => {\n    if (e.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n  return (\n    <>\n      {!userInfo.loggedIn ? (\n        <Form onSubmit={handleSubmit} onKeyPress={handleEnter}>\n          <h1>Login Field</h1>\n          <InputField>\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" {...username} />\n          </InputField>\n          <InputField>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" {...password} />\n          </InputField>\n          <button>Login</button>\n        </Form>\n      ) : (\n        <Redirect to={from} />\n      )}\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { useUser } from \"../ContextProvider/UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"../util/Button\";\nimport styled from \"styled-components\";\nimport ProtectedRoute from \"../Pages/ProtectedRoute\";\n\nconst Container = styled.main`\n  display: flex;\n  flex-flow: row wrap;\n  section {\n    flex: 1 1 auto;\n  }\n  button {\n    align-self: center;\n  }\n`;\n\nconst User = ({ user }) => {\n  const { setUserInfo } = useUser();\n  return (\n    <Container>\n      <section>\n        <h1>Hello, {user.username}</h1>\n      </section>\n      <Button onClick={() => setUserInfo({ loggedIn: false })}>Logout</Button>\n    </Container>\n  );\n};\n\nconst Home = () => {\n  const { userInfo } = useUser();\n  return (\n    <>\n      {userInfo.loggedIn ? (\n        <User user={{ ...userInfo }} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </>\n  );\n};\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const SearchContainer = styled.section`\n  display: flex;\n  flex-flow: row wrap;\n  gap: 10px;\n  button {\n    margin: 0;\n  }\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  font-size: 1.5rem;\n  flex: 1 1 auto;\n  background-color: #f1f3f5;\n  :focus {\n    background-color: white;\n  }\n  ::placeholder {\n    font-size: 1rem;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport animeLists from \"../data/anime.json\";\nimport styled from \"styled-components\";\nimport Button from \"../util/Button\";\n\nconst Status = styled.p`\n  color: ${({ status }) => (status ? \"green\" : \"grey\")};\n  font-weight: 600;\n`;\n\nconst SearchResult = ({ inputEl, resetSearch }) => {\n  console.log(inputEl);\n  const { name } = useParams();\n  const { goBack, goForward } = useHistory();\n  const { name: animeName, description, status } = animeLists.find(\n    ({ name: animeName }) => {\n      return new RegExp(`${name}`, \"gi\").test(animeName);\n    }\n  ) || { name: \"\", description: \"\", status: \"\" };\n  useEffect(() => {\n    inputEl.current.focus();\n    resetSearch();\n  }, [name]);\n  console.log(useHistory());\n\n  if (!animeName.length) {\n    return <h1>No Results...</h1>;\n  }\n  return (\n    <>\n      <h1>{animeName}</h1>\n      <p>{description}</p>\n      <Status status={status === \"active\"}>{status}</Status>\n      <Button onClick={() => goBack()}>Previous Search</Button>\n      <Button onClick={() => goForward()}>Forward</Button>\n    </>\n  );\n};\n\nexport default SearchResult;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styled, { css } from \"styled-components\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst ButtonWrap = styled.section`\n  display: block;\n  width: 100%;\n`;\nconst Buttons = styled(Button)`\n  && {\n    background-color: coral;\n    padding: 10px;\n    color: white;\n    :hover {\n      background-color: #9775fa;\n    }\n    ${({ primary }) =>\n      primary &&\n      css`\n        background-color: #5f3dc4;\n      `}\n  }\n`;\n\nconst StyledButton = ({\n  children = false,\n  onClick = false,\n  disabled = false,\n}) => {\n  const [msg, setMsg] = React.useState({ count: 0, msg: \"\" });\n  const handleClick = () =>\n    setMsg(prevMsg => {\n      const newCount = prevMsg.count + 1;\n      return newCount % 2\n        ? { count: newCount, msg: \"Clicked\" }\n        : { count: newCount, msg: \"\" };\n    });\n  return (\n    <>\n      <ButtonWrap>\n        <Buttons primary variant=\"outlined\" startIcon={<DeleteIcon />}>\n          Delete\n        </Buttons>\n      </ButtonWrap>\n      <IconButton>\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default StyledButton;\n","import React, { useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\nconst MenuUI = ({ anchorEl, setAnchorEl }) => {\n  const handleClose = () => setAnchorEl(null);\n  return (\n    <>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Home</MenuItem>\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default MenuUI;\n","export const data = [\n  { name: \"Yuta\", content: \"Mock Data One\" },\n  { name: \"Mori\", content: \"Mock Data Two\" },\n  { name: \"Yuta Mori\", content: \"Mock Data Three\" },\n];\n\nconst getData = async data => data;\n\nexport default getData;\n","import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport getData, { data as reqData } from \"../container/mockData\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport StyledButton from \"../button/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\n\nconst Container = styled(Grid)`\n  justify-content: center;\n`;\n\nconst PaperStyled = styled(Paper)`\n  height: 200px;\n`;\n\nconst Item = styled(Grid)`\n  flex: 1 1 300px;\n`;\n\nconst Loading = styled(CircularProgress)`\n  color: seagreen;\n`;\n\nconst CheckBox = ({ v }) => {\n  const [checked, setChecked] = useState(false);\n  return (\n    <Checkbox\n      fontSize=\"large\"\n      color=\"primary\"\n      checked={checked}\n      onChange={() => setChecked(prev => !prev)}\n      icon={<Favorite />}\n      checkedIcon={<Favorite />}\n    />\n  );\n};\n\nconst MainGrid = () => {\n  const [checked, setChecked] = useState(false);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const asyncReq = async () => {\n      const res = await getData(reqData);\n      setData(res);\n    };\n    const timer = setTimeout(asyncReq, 1000);\n    return () => clearTimeout(timer);\n  }, []); //flex container\n  return (\n    <>\n      <Container container spacing={2}>\n        <Item item xs={12}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 12</pre>\n            {Array.from({ length: 2 }, (_, i) => i).map(v => {\n              return <CheckBox key={v} v={v} />;\n            })}\n          </PaperStyled>\n        </Item>\n        <Item item xs={6}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 6</pre>\n          </PaperStyled>\n        </Item>\n        <Item item xs={6}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 6</pre>\n          </PaperStyled>\n        </Item>\n        <Item item lg={3} md={4} xs={10}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 3</pre>\n          </PaperStyled>\n        </Item>\n        <Item item lg={3} md={4} xs={10}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 3</pre>\n          </PaperStyled>\n        </Item>\n        <Item item lg={3} md={4} xs={10}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 3</pre>\n          </PaperStyled>\n        </Item>\n        <Item item lg={3} md={4} xs={10}>\n          <PaperStyled variation=\"outlined\">\n            <h1>Title</h1>\n            <p>Content</p>\n            <pre>xs: 3</pre>\n          </PaperStyled>\n        </Item>\n      </Container>\n      <Container container spacing={3}>\n        {!data ? (\n          <Loading size={50} />\n        ) : (\n          data.map(({ name, content }, index) => (\n            <Item key={index} item>\n              <PaperStyled elevation={3}>\n                <h1>{name}</h1>\n                <p>{content}</p>\n              </PaperStyled>\n            </Item>\n          ))\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MainGrid;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\n\nconst Btn = styled(Button)`\n  && {\n    display: block;\n  }\n`;\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function DialogContainer() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Btn\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleClickOpen}\n        style={{ display: \"block\" }}\n      >\n        Open Modal\n      </Btn>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Terms and Conditions\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography>\n            This area will be filled with some disclaimer text that is currently\n            empty.\n          </Typography>\n          <Typography>\n            This area will be filled with some disclaimer text that is currently\n            empty.\n          </Typography>\n          <Typography>\n            This area will be filled with some disclaimer text that is currently\n            empty.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Click here to Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles(() => ({\n  margin: {\n    margin: 50,\n  },\n  padding: {\n    padding: 10,\n  },\n}));\n\nconst Close = styled(IconButton)`\n  && {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n  }\n`;\n\nconst Content = styled(MuiDialogContent)`\n  flex: 1 1 auto;\n`;\n\nconst PaperContainer = styled(Paper)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 300px;\n  height: 300px;\n`;\n\nconst MyDialog = () => {\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setOpen(false);\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        onClick={() => setOpen(true)}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.margin}\n        endIcon={<AddIcon />}\n      >\n        {`open my modal`.toUpperCase()}\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <PaperContainer variant=\"outlined\">\n          <MuiDialogTitle>\n            <Close onClick={handleClose}>\n              <CloseIcon />\n            </Close>\n            <Typography variant=\"h5\" className={classes.padding}>\n              Testing this Modal\n            </Typography>\n          </MuiDialogTitle>\n          <Content dividers>\n            <Typography variant=\"h6\">\n              This is the place where filler content goes in.\n            </Typography>\n          </Content>\n          <MuiDialogActions>\n            <Button color=\"secondary\">Agree to terms and conditions</Button>\n          </MuiDialogActions>\n        </PaperContainer>\n      </Dialog>\n    </>\n  );\n};\n\nexport default MyDialog;\n","import React, { useState, useContext, createContext } from \"react\";\n\nconst Theme = createContext();\nexport const useTheme = () => useContext(Theme);\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(false);\n  return (\n    <Theme.Provider value={{ isDark, setIsDark }}>{children}</Theme.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport styled from \"styled-components\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Home from \"@material-ui/icons/Home\";\nimport Button from \"@material-ui/core/Button\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"../ContextProvider/ThemeProvider\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst Moon = styled(Brightness2Icon)`\n  width: 50px;\n  height: 30px;\n  color: yellow;\n`;\n\nconst Sun = styled(Brightness7Icon)`\n  width: 50px;\n  height: 30px;\n  color: orange;\n`;\n\nconst CheckboxStyled = styled(Checkbox)`\n  margin-left: auto;\n`;\n\nconst DrawerUI = ({ open, onClose }) => {\n  const isMobile = useMediaQuery(\"(max-width:500px)\");\n  return (\n    <Drawer anchor={isMobile ? \"top\" : \"left\"} open={open} onClose={onClose}>\n      <List style={{ maxWidth: 300 }}>\n        <LinkStyled to=\"/\" onClick={onClose}>\n          <Button fullWidth={true} startIcon={<Home />}>\n            <ListItemStyled>Home</ListItemStyled>\n          </Button>\n        </LinkStyled>\n        <LinkStyled to=\"/about\" onClick={onClose}>\n          <Button fullWidth={true} startIcon={<MoreHorizIcon />}>\n            <ListItemStyled>About</ListItemStyled>\n          </Button>\n        </LinkStyled>\n        <LinkStyled to=\"/profile\" onClick={onClose}>\n          <Button fullWidth={true} startIcon={<AccountBoxIcon />}>\n            <ListItemStyled>Profile</ListItemStyled>\n          </Button>\n        </LinkStyled>\n      </List>\n    </Drawer>\n  );\n};\n\nconst LinkStyled = styled(Link)`\n  text-decoration: none;\n`;\n\nconst ListItemStyled = styled(ListItem)`\n  font-size: 1rem;\n`;\n\nconst useStyles = makeStyles({\n  margin: {\n    margin: 0,\n  },\n  padding: {\n    padding: 20,\n  },\n  background: {\n    backgroundColor: \"seagreen\",\n    color: \"white\",\n  },\n});\n\nconst Menu = styled(MenuIcon)``;\n\nconst ToolbarStyled = styled(Toolbar)`\n  background-color: ${props => (props.isDark ? \"#364fc7\" : \"#748ffc\")};\n  color: ${props => (props.isDark ? \"white\" : \"black\")};\n`;\nconst Navbar = () => {\n  const { isDark, setIsDark } = useTheme();\n  const handleChange = () => setIsDark(prevOn => !prevOn);\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  console.log(isDark);\n  return (\n    <>\n      <AppBar elevation={10} position=\"sticky\" color=\"secondary\">\n        <ToolbarStyled variant=\"dense\" isDark={isDark}>\n          <IconButton>\n            <Menu onClick={handleOpen} isDark={isDark} />\n          </IconButton>\n          <Typography variant=\"h5\">Home {JSON.stringify(isDark)}</Typography>\n          <CheckboxStyled\n            color=\"primary\"\n            checkedIcon={<Sun />}\n            icon={<Moon />}\n            value={isDark}\n            onChange={handleChange}\n          />\n        </ToolbarStyled>\n      </AppBar>\n      <DrawerUI open={open} onClose={handleClose} />\n    </>\n  );\n};\n\n/*\n <AppBar position=\"sticky\" className={classes.margin} elevation={3}>\n        <Toolbar>\n          <IconButton onClick={handleOpen}>\n            <Menu />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      */\nexport default Navbar;\n","import React, { useState } from \"react\";\n\nconst useInput = initial => {\n  const [value, setValue] = useState(initial);\n  return [\n    { value, onChange: ({ target: { value: v } }) => setValue(v) },\n    () => setValue(initial),\n  ];\n};\n\nexport default useInput;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TypePography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport styled, { css } from \"styled-components\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nconst PaperStyled = styled(Paper)`\n  word-break: break-all;\n  padding: 10px;\n  border-radius: 5px;\n  ${({ completed }) =>\n    completed &&\n    css`\n      background-color: grey;\n    `}\n`;\n\nconst NoteDisplay = ({ note, id, dispatch, completed = false }) => {\n  const handleDelete = () => dispatch({ type: \"REMOVE\", payload: { id } });\n  const handleDone = () => dispatch({ type: \"COMPLETE\", payload: { id } });\n  return (\n    <Grid item lg={4} md={5} sm={10}>\n      <PaperStyled elevation={10} completed={completed}>\n        <TypePography variant=\"h5\">{note}</TypePography>\n        <Button startIcon={<DeleteIcon />} onClick={handleDelete}>\n          Delete\n        </Button>\n        <IconButton>\n          <DoneIcon onClick={handleDone} />\n        </IconButton>\n      </PaperStyled>\n    </Grid>\n  );\n};\n\nexport default NoteDisplay;\n","import React, { useReducer } from \"react\";\nimport useInput from \"./useInput\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport styled from \"styled-components\";\nimport NoteDisplay from \"./NoteDisplay\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nconst Container = styled.article`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  button {\n    align-self: center;\n    padding: 12px;\n  }\n`;\n\nconst add = action => ({ note: action.payload.note, id: action.payload.id });\n\nconst remove = (state, action) =>\n  state.filter(note => note.id !== action.payload.id);\n\nconst complete = (state, action) =>\n  state.map(note =>\n    action.payload.id === note.id\n      ? { ...note, completed: !note.completed }\n      : note\n  );\n\nconst noteReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, add(action)];\n    case \"REMOVE\":\n      return remove(state, action);\n    case \"COMPLETE\":\n      return complete(state, action);\n    default:\n      return state;\n  }\n};\n\nconst Note = () => {\n  const [value, reset] = useInput(\"\");\n  const [notes, noteDispatch] = useReducer(noteReducer, []);\n  const isMobile = useMediaQuery(\"(max-width: 500px)\");\n  const handleSubmit = () =>\n    noteDispatch({\n      type: \"ADD\",\n      payload: { note: value.value, id: uuidv4(), completed: false },\n    });\n  return (\n    <>\n      <Container>\n        <TextField\n          size=\"medium\"\n          {...value}\n          variant=\"outlined\"\n          label=\"Take Note\"\n        />\n        <Button\n          endIcon={<AddIcon />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleSubmit}\n        >\n          Add Note\n        </Button>\n      </Container>\n      <Grid\n        direction={isMobile ? \"column\" : \"row\"}\n        align=\"center\"\n        justify=\"center\"\n        container\n        spacing={1}\n        style={{ margin: \"10px auto\" }}\n      >\n        <>\n          {!!notes.length &&\n            notes.map(note => (\n              <NoteDisplay key={note.id} {...note} dispatch={noteDispatch} />\n            ))}\n        </>\n      </Grid>\n    </>\n  );\n};\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {\n  Route,\n  useRouteMatch,\n  useParams,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport datas from \"./data.json\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport Note from \"./Note\";\nconst LinkStyled = styled(Link)`\n  color: black;\n`;\n\nconst Page = () => {\n  const { name } = useParams();\n  const { goBack } = useHistory();\n  const page = datas.find(data =>\n    new RegExp(`${name.split`-`.join` `}`, \"gi\").test(data.name)\n  );\n  return (\n    <>\n      <h1>Programatically created page for {name}</h1>\n      <p>{page.name}</p>\n      <p>{page.status ? \"ACTIVE\" : \"PASUED\"}</p>\n      <Button onClick={() => goBack()}>go back</Button>\n    </>\n  );\n};\n\nconst About = () => {\n  const match = useRouteMatch();\n  const [anchor, setAnchor] = useState(null);\n  const handleClose = () => setAnchor(null);\n  const handleClick = e => setAnchor(e.currentTarget);\n  return (\n    <>\n      <Container fixed>\n        <h1>About Page</h1>\n        <Note />\n        <Button onClick={handleClick}>Open Menu</Button>\n        <Menu\n          anchorEl={anchor}\n          keepMounted\n          open={!!anchor}\n          onClose={handleClose}\n        >\n          {datas.map(data => (\n            <MenuItem key={data.id}>\n              <LinkStyled to={`${match.path}/${data.name.split` `.join`-`}`}>\n                {data.name.split` `.join(\" \")}\n              </LinkStyled>\n            </MenuItem>\n          ))}\n        </Menu>\n      </Container>\n      <Route path={`${match.path}/:name`}>\n        <Page />\n      </Route>\n    </>\n  );\n};\n\nexport default About;\n","import styled from \"styled-components\";\n\nconst TopSpacer = styled.div`\n  margin: 100px;\n`;\n\nexport default TopSpacer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport styled from \"styled-components\";\nimport TopSpacer from \"../spacer/TopSpacer\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst BottomNavbar = styled(BottomNavigation)`\n  box-sizing: border-box;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  p {\n    padding: 0 10px;\n    text-align: left;\n  }\n  button {\n    margin-left: auto;\n    width: fit-content;\n    padding: 0 20px;\n  }\n`;\n\nexport default function BottomNav() {\n  return (\n    <>\n      <TopSpacer />\n      <BottomNavbar showLabels>\n        <p>\n          Some Random TextTextTextTextText TextText TextTextTextTextTextTextText\n          Text lorem\n        </p>\n        <IconButton>\n          <h3>I Agree</h3>\n        </IconButton>\n      </BottomNavbar>\n    </>\n  );\n}\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport styled from \"styled-components\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst CardStyled = styled(Card)``;\nconst CardUI = () => {\n  return (\n    <Grid item xs={8} sm={5} md={4} lg={3}>\n      <CardStyled elevation={20}>\n        <CardActionArea>\n          <CardMedia\n            image={require(\"../img/bayernlogo.png\")}\n            style={{ height: 140 }}\n          />\n        </CardActionArea>\n        <CardContent>\n          <h2>Title</h2>\n          <p>\n            Reincarnated as a slime received a second season and is quite a bit\n            darker than the first one.\n          </p>\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\">Open Link</Button>\n          <Button color=\"primary\">Close Link</Button>\n        </CardActions>\n      </CardStyled>\n    </Grid>\n  );\n};\n\nexport default CardUI;\n","import Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport React from \"react\";\n\nconst Message = ({ open, handleClose, username, handleButtonClose }) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    open={open}\n    autoHideDuration={6000}\n    onClose={handleClose}\n    message={`Your username, ${username} is saved`}\n    action={\n      <React.Fragment>\n        <Button\n          color=\"primary\"\n          size=\"medium\"\n          onClick={handleButtonClose}\n          name=\"button\"\n        >\n          UNDO\n        </Button>\n        <IconButton\n          size=\"small\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={handleClose}\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n      </React.Fragment>\n    }\n  />\n);\n\nexport default Message;\n","import TextField from \"@material-ui/core/TextField\";\nimport React, { useRef, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nconst CreateUser = ({ value, onChange, handleSubmit }) => {\n  const handleChange = e => onChange(e.target.value);\n  const ref = useRef();\n  useEffect(() => ref.current.focus(), []);\n  return (\n    <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <TextField\n          inputRef={ref}\n          value={value}\n          onChange={handleChange}\n          variant=\"outlined\"\n          label=\"Choose Username\"\n        />\n      </Grid>\n      <Grid item>\n        <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n          Choose Username\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateUser;\n","import React, { useState } from \"react\";\nimport Message from \"./Snackbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport styled, { css } from \"styled-components\";\nimport CheckBox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CreateUser from \"./CreateUser\";\nimport BackspaceIcon from \"@material-ui/icons/Backspace\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst AvatarStyled = styled(Avatar)`\n  background-color: seagreen;\n`;\n\nconst StyledPaer = styled(Paper)`\n  && {\n    min-width: 280px;\n    padding: 10px;\n    margin: 10px;\n  }\n`;\n\nconst Header = styled.h1`\n  color: #2a2a72;\n  padding: 10px;\n  font-size: 3rem;\n  ${({ small }) =>\n    small &&\n    css`\n      font-size: 1.5rem;\n    `}\n`;\n\nconst Agreement = styled.article`\n  display: flex;\n  justify-content: center;\n  flex-flow: row wrap;\n  gap: 2px;\n  h1 {\n    flex: 1 1 auto;\n    word-break: break-all;\n  }\n  span {\n    align-self: center;\n  }\n  @media screen and (max-width: 800px) {\n    > * {\n      flex: 1 1 100%;\n    }\n    label {\n      margin: auto;\n    }\n  }\n`;\n\nconst MediaObject = styled.article`\n  display: flex;\n  justify-content: center;\n  div {\n    align-self: center;\n    background-color: seagreen;\n  }\n  h1 {\n    flex: 1 1 auto;\n  }\n`;\n\nconst User = ({ name, onClick }) => {\n  return (\n    <Grid container justify=\"center\" spacing={1}>\n      <StyledPaer>\n        <MediaObject>\n          <AvatarStyled>{name[0] + name[name.length - 1]}</AvatarStyled>\n          <h1>Hi, {name}</h1>\n        </MediaObject>\n        <Button color=\"primary\" onClick={onClick} startIcon={<BackspaceIcon />}>\n          Change Username\n        </Button>\n      </StyledPaer>\n    </Grid>\n  );\n};\n\nconst Profile = () => {\n  const [username, setUsername] = useState(\"zaizen\");\n  const [open, setOpen] = useState(false);\n  const [checked, setChecked] = useState({ checkedA: false, checkedB: false });\n  const handleChange = e => {\n    const { name, checked } = e.target;\n    setChecked(prevChecked => ({ ...prevChecked, [name]: checked }));\n    if (e.target.name === \"checkedA\") {\n      setOpen(true);\n      return;\n    }\n    setUsername(\"\");\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSubmit = () => {\n    if (username.length === 0) {\n      setUsername(\"annon\");\n    }\n    setChecked(prevChecked => ({ ...prevChecked, checkedA: true }));\n  };\n  const handleButtonClose = () => {\n    setOpen(false);\n    setChecked(prevChecked => ({\n      ...prevChecked,\n      checkedA: false,\n      checkedB: false,\n    }));\n  };\n  return (\n    <>\n      <Container maxWidth=\"fixed\">\n        <Grid container spacing={5} justify=\"center\">\n          <Grid item sm={12} md={12} lg={10}>\n            <StyledPaer>\n              <Typography color=\"primary\" variant=\"h3\">\n                Profile Page\n              </Typography>\n              <Grid container spacing={1} justify=\"center\">\n                {!checked.checkedA && !checked.checkedB ? (\n                  <Agreement>\n                    <Typography variant=\"h5\" color=\"secondary\">\n                      Are you sure your username is {username}\n                    </Typography>\n                    <FormControlLabel\n                      label=\"I AGREE\"\n                      control={\n                        <CheckBox\n                          value={checked.checkedA}\n                          name=\"checkedA\"\n                          onChange={handleChange}\n                        />\n                      }\n                    />\n                    <FormControlLabel\n                      label=\"I DISAGREE\"\n                      control={\n                        <CheckBox\n                          value={checked.checkedB}\n                          name=\"checkedB\"\n                          onChange={handleChange}\n                        />\n                      }\n                    />\n                  </Agreement>\n                ) : checked.checkedA ? (\n                  <User name={username} onClick={handleButtonClose} />\n                ) : checked.checkedB ? (\n                  <CreateUser\n                    value={username}\n                    onChange={setUsername}\n                    handleSubmit={handleSubmit}\n                  />\n                ) : null}\n              </Grid>\n            </StyledPaer>\n          </Grid>\n        </Grid>\n      </Container>\n      <Message\n        open={open}\n        handleClose={handleClose}\n        username={username}\n        handleButtonClose={handleButtonClose}\n      />\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport StyledButton from \"./button/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport styled, {\n  createGlobalStyle,\n  ThemeProvider as StyledThemeProvider,\n} from \"styled-components\";\nimport MenuUI from \"./menu/Menu\";\nimport MainGrid from \"./container/MainGrid\";\nimport DialogContainer from \"./dialog/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MyDialog from \"./dialog/DialogTest\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./navbar/Navbar\";\nimport About from \"./components/About\";\nimport BottomNav from \"./navbar/Bottom\";\nimport TopSpacer from \"./spacer/TopSpacer\";\nimport CardUI from \"./card/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Container from \"@material-ui/core/Container\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Profile from \"./profile/Profile\";\nimport { useTheme } from \"./ContextProvider/ThemeProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"#2a2a72\",\n    backgroundImage: \"linear-gradient(315deg, #2a2a72 0%, #009ffd 74%)\",\n    borderRadius: 3,\n    color: \"white\",\n    height: 48,\n    padding: \"0 30px\",\n  },\n});\n\nconst Global = createGlobalStyle`body {\n    background-color: ${props => props.theme.background};\n    color: ${props => props.theme.color};\n    font-family: sans-serif;\n    text-align:center;\n    margin: 0;\n    padding: 0;\n    width:100vw;\n}`;\n\nconst Home = () => {\n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n  const { setIsDark } = useTheme();\n  return (\n    <Container>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => setIsDark(prevIsDark => !prevIsDark)}\n      >\n        Change Theme\n      </Button>\n      <MyDialog />\n      <Grid container spacing={1} justify=\"center\">\n        <CardUI />\n        <CardUI />\n        <CardUI />\n        <CardUI />\n      </Grid>\n      <Grid justify=\"center\" container spacing={1}>\n        <Grid item elevation={3} xs={10} md={4} lg={3} open={open}>\n          <Paper style={{ position: \"relative\" }}>\n            <IconButton\n              style={{ position: \"absolute\", right: \"10px\" }}\n              onClick={() => setOpen(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n            <h1>Title</h1>\n            <p>Filler content</p>\n            <Button className={classes.root}>GREEN</Button>\n          </Paper>\n        </Grid>\n        <Grid item elevation={3} xs={10}>\n          <Paper>\n            <h1>Title</h1>\n            <p>Filler content</p>\n          </Paper>\n        </Grid>\n        <Grid item elevation={3} lg={3} md={4} xs={10}>\n          <Paper>\n            <h1>Title</h1>\n            <p>Filler content</p>\n          </Paper>\n        </Grid>\n        <DialogContainer />\n        <MenuUI />\n        <StyledButton />\n        <MainGrid />\n      </Grid>\n    </Container>\n  );\n};\n\nconst styledTheme = {\n  dark: {\n    background: \"#212529\",\n    color: \"#f8f9fa\",\n  },\n  light: {\n    background: \"#e9ecef\",\n    color: \"#212529\",\n  },\n};\n\nconst Material = () => {\n  const { isDark } = useTheme();\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: isDark ? \"dark\" : \"light\",\n          primary: {\n            main: isDark ? \"#a5d8ff\" : \"#1864ab\",\n          },\n        },\n      }),\n    [isDark]\n  );\n  return (\n    <StyledThemeProvider theme={isDark ? styledTheme.dark : styledTheme.light}>\n      <ThemeProvider theme={theme}>\n        <Global />\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route>\n            <Grid container spacing={10}>\n              <Grid item xs={12}>\n                <Paper>\n                  <h1>404 Page: Nothing was found</h1>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </StyledThemeProvider>\n  );\n};\n\nexport default Material;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport UserContext from \"./ContextProvider/UserContext\";\nimport Material from \"./materila_ui/Material\";\nimport ThemeContextProvider from \"./materila_ui/ContextProvider/ThemeProvider\";\n\nconst ContextApp = () => {\n  return (\n    <UserContext>\n      <App />\n    </UserContext>\n  );\n};\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ContextApp />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n*/\n\nconst MaterialUI = () => (\n  <ThemeContextProvider>\n    <Material />\n  </ThemeContextProvider>\n);\n\nReactDOM.render(\n  <Router>\n    <MaterialUI />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n//ReactDOM.hydrate(<Menu />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}